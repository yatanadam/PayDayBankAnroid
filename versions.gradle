/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]
def versions = [:]
versions.arch_core = "2.0.1"
versions.room = "2.2.5"
versions.lifecycle = "2.1.0"
versions.support = "27.1.0"
versions.dagger = "2.18"
versions.junit = "4.12"
versions.apache_commons = "2.5"
versions.constraint_layout = "1.0.2"
versions.glide = "3.8.0"
versions.timber = "4.5.1"
versions.butterknife = "8.8.1"
versions.avi = "2.1.3"
versions.gson = "2.8.2"
versions.exoplayer = "2.9.2"
versions.android_gradle_plugin = '3.5.1'
versions.atsl_runner = "1.0.1"
versions.atsl_rules = "1.0.1"
versions.paging = "1.0.0"
versions.retrofitVersion = "2.6.0"
versions.retrofitOkHttpLoggingVersion = "3.9.0"

def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = 'androidx.appcompat:appcompat:1.0.0'
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = 'androidx.cardview:cardview:1.0.0'
support.design = 'com.google.android.material:material:1.0.0'
support.v4 = 'androidx.legacy:legacy-support-v4:1.0.0'
support.core_utils = "com.android.support:support-core-utils:$versions.support"
deps.support = support

def room = [:]
room.runtime = 'androidx.room:room-runtime:2.0.0'
room.compiler = 'androidx.room:room-compiler:2.0.0'
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = 'androidx.lifecycle:lifecycle-runtime:2.0.0'
lifecycle.extensions = 'androidx.lifecycle:lifecycle-extensions:2.0.0'
lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = 'androidx.lifecycle:lifecycle-compiler:2.0.0'
deps.lifecycle = lifecycle

def butterknife = [:]
butterknife.runtime = "com.jakewharton:butterknife:$versions.butterknife"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"
deps.butterknife = butterknife

def exoplayer = [:]
exoplayer.runtime = "com.google.android.exoplayer:exoplayer:$versions.exoplayer"
exoplayer.core = "com.google.android.exoplayer:exoplayer-core:$versions.exoplayer"
exoplayer.dash = "com.google.android.exoplayer:exoplayer-dash:$versions.exoplayer"
exoplayer.ui = "com.google.android.exoplayer:exoplayer-ui:$versions.exoplayer"
deps.exoplayer = exoplayer


def arch_core = [:]
arch_core.testing = "android.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core


def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"

deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofitVersion"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofitVersion"
retrofit.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.retrofitOkHttpLoggingVersion"

deps.retrofit = retrofit



def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
deps.atsl = atsl


deps.paging = 'androidx.paging:paging-runtime:2.0.0'
deps.glide = "com.github.bumptech.glide:glide:$versions.glide"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.avi = "com.wang.avi:library:$versions.avi"

deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.junit = "junit:junit:$versions.junit"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 26
build_versions.target_sdk = 28
build_versions.build_tools = "27.0.3"
ext.build_versions = build_versions


def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url 'http://195.87.213.161:8081/artifactory/libs-release-local' }
    // TODO BIOMETRIC SIGN --> aar dosyasının barındığı klasörü belirtiyoruz
    handler.flatDir([dirs:'libs'])
}
ext.addRepos = this.&addRepos
